using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace WindowsFormsApplication1
{
    public partial class Form1 : Form
    {

        private List<Figura> figuras;
        public int x, y;
        
        private bool dibujando;

        public Form1()
        {

            figuras = new List<Figura>();
            dibujando = false;
            InitializeComponent();
          
        }


        private void Form1_Load(object sender, EventArgs e)
        {
    

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void iniciarNuevoJuegoToolStripMenuItem_Click_1(object sender, EventArgs e)
        {
            MessageBox.Show(" Has elegido iniciar un nuevo juego, Exito");

        }

        private void cerrarJuegoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void textBox2_TextChanged(object sender, EventArgs e)
        {

        }

        private void Form1_Paint(object sender, PaintEventArgs e)
        {
            Pen p = new Pen(Color.Black, 3);
            SolidBrush sb = new SolidBrush(Color.Red);
            foreach (Figura r in figuras)
                r.Dibuja(e.Graphics, p, sb);

        }

        private void Form1_MouseDown(object sender, MouseEventArgs e)
        {
            this.dibujando = true;
            this.x = e.X;
            this.y = e.Y;

        }

        private void Form1_MouseUp(object sender, MouseEventArgs e)
        {
            this.dibujando = false;
            if (e.Button == MouseButtons.Left)
                figuras.Add(new Rectangulo(this.x, this.y, e.X - this.x, e.Y - this.y));
            else
                figuras.Add(new Elipse(this.x, this.y, e.X - this.x, e.Y - this.y));

            this.Invalidate();

        }

        private void Form1_MouseMove(object sender, MouseEventArgs e)
        {

            if (e.Button == System.Windows.Forms.MouseButtons.Left)
            {
                Pen p = new Pen(Color.Blue, 2);
                p.DashStyle = System.Drawing.Drawing2D.DashStyle.Dash;

                Rectangulo r = new Rectangulo(this.x, this.y, e.X - this.x, e.Y - this.y);
                r.Dibuja(this.CreateGraphics(), p);
                //this.Invalidate();
            }

        }

        private void button1_Click(object sender, EventArgs e)
        {
            

        }

        private void button1_MouseClick(object sender, MouseEventArgs e)
        {
             

        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {

        }

        private void pictureBox1_Click_1(object sender, EventArgs e)
        {

        }

        private void button1_Click_1(object sender, EventArgs e)
        {
  
  
        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void button1_Click_2(object sender, EventArgs e)
        {
         
           

        }
         


    }

    }




Figura.cs



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace WindowsFormsApplication1
{
    public abstract class Figura
    {
        public abstract void  Dibuja(Graphics g, Pen p, SolidBrush sb);
        public abstract void Dibuja(Graphics g, Pen p);
    }

    public class Rectangulo:Figura
    {
        public int x, y, w, h;

        public Rectangulo(int x, int y, int w, int h )
        {
            this.x = x;
            this.y = y;
            this.w = w;
            this.h = h;
        }
    public override void  Dibuja(Graphics g, Pen p, SolidBrush sb )
    {
            g.FillRectangle(sb, this.x, this.y,this.w,this.h);
            g.DrawRectangle(p, this.x, this.y,this.w,this.h);
    }

    public override void Dibuja(Graphics g, Pen p)
    {
        g.DrawRectangle(p, this.x, this.y, this.w, this.h);
    }

}

    public class Elipse : Figura
    {
        public int x, y, w, h;

        public Elipse(int x, int y, int w, int h)
        {
            this.x = x;
            this.y = y;
            this.w = w;
            this.h = h;
        }
        public override void Dibuja(Graphics g, Pen p, SolidBrush sb)
        {
            g.FillEllipse(sb, this.x, this.y, this.w, this.h);
            g.DrawEllipse(p, this.x, this.y, this.w, this.h);

        }
        public override void Dibuja(Graphics g, Pen p)
        {
            g.DrawEllipse(p, this.x, this.y, this.w, this.h);
        }
    }
}











